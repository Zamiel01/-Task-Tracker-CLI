🧭 Task Tracker CLI
A simple, fast, and lightweight Command Line Interface (CLI) to track your daily tasks with ease.

Python Version
CLI Task Manager
License

📦 Features
✅ Add new tasks with descriptions and statuses
✅ Update existing task descriptions
✅ Change the status of tasks (todo, in-progress, done)
✅ Delete tasks by ID
✅ View all tasks or filter by status
✅ Persistent local storage in task.json
⚙️ Requirements
🐍 Python 3.8+
No external dependencies — utilizes only Python’s standard library 💪
🚀 Installation
bash

# Clone the repository
git clone https://github.com/yourusername/task-tracker-cli.git
cd task-tracker-cli

# Run the Python file
python task_tracker.py
💡 The script automatically creates a task.json file if it doesn’t exist.

🧩 How to Use
When you run the program, you’ll see:


WELCOME TO YOUR TASK TRACKER CLI

1. Add task
2. Update task
3. Delete task
4. Update task status
5. Display all tasks
6. Display tasks by status
Follow the on-screen prompts according to your choice.

1️⃣ Add a New Task

Enter short task description (max 30 words): Finish Python project
Enter your task status (todo, in-progress, done): todo
Output:


Task added successfully (ID: 123e4567-e89b-12d3-a456-426614174000)
2️⃣ Update Task Description

Enter the task id to be updated: 123e4567-e89b-12d3-a456-426614174000
Enter the new description: Finish Python project with README
Output:


Task updated successfully
3️⃣ Delete a Task

Enter the task id to be deleted: 123e4567-e89b-12d3-a456-426614174000
Output:


Task deleted successfully
4️⃣ Update Task Status

Enter the task id to be updated: 123e4567-e89b-12d3-a456-426614174000
Enter the new status (todo, in-progress, done): done
Output:


Task status updated successfully
5️⃣ Display All Tasks
json

{
  "id": "123e4567-e89b-12d3-a456-426614174000",
  "description": "Finish Python project with README",
  "status": "done",
  "CreatedAt": "2025-10-27 12:45:32",
  "UpdatedAt": "2025-10-27 13:10:45"
}
6️⃣ Display Tasks by Status

Enter task status you wish to print (todo, in-progress, done): todo
Output:
Displays all tasks currently in the chosen status.

🧠 Data Storage
All tasks are saved in a file named task.json in the same directory as the script.

Example Structure:
json

[
  {
    "id": "d3f9b1b8-54d9-4dc7-b6ef-85d6c91c74df",
    "description": "Complete Python CLI app",
    "status": "in-progress",
    "CreatedAt": "2025-10-27 09:30:12",
    "UpdatedAt": "2025-10-27 09:45:00"
  }
]
📝 Notes
Each task is assigned a unique UUID automatically.
You can manually open and edit task.json if needed.
Ensure to use valid statuses: todo, in-progress, or done.
💡 Future Improvements
✨ Add search functionality by keyword
⏰ Integrate due dates or priorities
📊 Allow exporting tasks to CSV
🌈 Implement color-coded terminal output
👨‍💻 Author
Your Name
📧 nkuinmbeng@gmail.com
🐙 [GitHub: zamiel01]

Built with ❤️ using Python.
